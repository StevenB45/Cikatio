// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modèle pour les utilisateurs (normaux et administrateurs)
model User {
  id             String   @id @default(uuid())
  email          String   @unique
  name           String
  hashedPassword String
  role           Role     @default(USER)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  loans          Loan[]
}

enum Role {
  USER
  ADMIN
}

// Modèle pour les items (livres et matériel)
model Item {
  id          String   @id @default(uuid())
  customId    String   @unique // identifiant unique entré manuellement
  name        String
  description String?
  category    ItemType
  available   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  loans       Loan[]

  // Champs spécifiques aux livres
  author        String?
  isbn          String?
  publisher     String?
  yearPublished Int?

  // Champs spécifiques au matériel
  serialNumber String?
  brand        String?
  model        String?

  reservationStatus ReservationStatus @default(AVAILABLE)

  @@index([customId])
  @@index([name])
}

enum ItemType {
  BOOK
  EQUIPMENT
}

enum ReservationStatus {
  AVAILABLE
  RESERVED
  BORROWED
  OUT_OF_ORDER
}

// Modèle pour les prêts
model Loan {
  id         String     @id @default(uuid())
  item       Item       @relation(fields: [itemId], references: [id])
  itemId     String
  borrower   User       @relation(fields: [borrowerId], references: [id])
  borrowerId String
  borrowedAt DateTime   @default(now())
  dueAt      DateTime
  returnedAt DateTime?
  status     LoanStatus @default(ACTIVE)
  notes      String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@index([borrowerId])
  @@index([itemId])
  @@index([status])
}

enum LoanStatus {
  ACTIVE
  OVERDUE
  RETURNED
  OUT_OF_ORDER
}
